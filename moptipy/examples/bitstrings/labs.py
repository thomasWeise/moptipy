"""
The ow Autocorrelation Binary Sequence problem.

The autocorrelations of a bit string `x` are defined as

`C_k(x) = sum(i = 0, n - k - 1, 1 if x[i] == x[i + k] else -1)`

The energy of the bit string, which is equivalent to the objective value of
this benchmark problem, is then:

`E(x) = sum(k = 1, n - 1, C_k(x) ** 2)`

The low-autocorrelation binary sequence (LABS) problem is to find a minimum
autocorrelated bit string is equivalent to minimizing `E`. We use the energy
directly as objective function. Others who define LABS as a maximization
problem try to maximize the merit factor `F` instead, which is equivalent to
minimizing the energy:

`F(x) = n² / (n * E(X))`

This problem is different than the other bit-string based problems, because we
only know the optimal solutions for few, smaller instances. For larger
instances, we only have lower bounds of the energy.

1. Carola Doerr and Furong Ye and Naama Horesh and Hao Wang and Ofer M. Shir
   and Thomas Bäck. Benchmarking Discrete Optimization Heuristics with
   IOHprofiler. Applied Soft Computing 88:106027, March 2020,
   doi: https://doi.org/10.1016/j.asoc.2019.106027.
2. Tom Packebusch and Stephan Mertens. Low Autocorrelation Binary Sequences.
   arXiv:1512.02475v2 [cond-mat.stat-mech] 24 Mar 2016
   https://arxiv.org/pdf/1512.02475
3. Burkhard Militzer, Michele Zamparelli, and Dieter Beule. Evolutionary
   Search for Low Autocorrelated Binary Sequences. IEEE Transactions on
   Evolutionary Computation. 2(1):34-39}. 1998.
   doi: https://doi.org/10.1109/4235.728212
4. Wai Ho Mow and Ke-Lin Du. New Evolutionary Search for Long Low
   Autocorrelation Binary Sequences. IEEE Transactions on Aerospace and
   Electronic Systems. 51(1):290-303. January 2015.
   doi: https://doi.org/10.1109/TAES.2014.130518
5. Borko Bošković, Franc Brglez, and Janez Brest. Low-Autocorrelation Binary
   Sequences: On Improved Merit Factors and Runtime Predictions to Achieve
   Them. arXiv:1406.5301v6 [cs.DS] 6 May 2017. See [6] below.
   https://arxiv.org/pdf/1406.5301
6. Borko Bošković, Franc Brglez, and Janez Brest. Low-Autocorrelation Binary
   Sequences: On Improved Merit Factors and Runtime Predictions to Achieve
   Them. Applied Soft Computing. 56:262-285, July 2017.
   doi: https://doi.org/10.1016/j.asoc.2017.02.024

This is code is part of the research work of Mr. Jiazheng ZENG (曾嘉政),
a Master's student at the Institute of Applied Optimization
(应用优化研究所, http://iao.hfuu.edu.cn) of the School of Artificial
Intelligence and Big Data (人工智能与大数据学院) at
Hefei University (合肥大学) in
Hefei, Anhui, China (中国安徽省合肥市) under the supervision of
Prof. Dr. Thomas Weise (汤卫思教授).
"""
from typing import Callable, Final, Iterator, cast

import numba  # type: ignore
import numpy as np
from pycommons.ds.sequences import merge_sorted_and_return_unique
from pycommons.types import check_int_range

from moptipy.examples.bitstrings.bitstring_problem import (
    BitStringProblem,
    default_scale_sequence,
)


@numba.njit(nogil=True, cache=True)
def labs(x: np.ndarray) -> int:
    """
    Calculate the objective value of the LABS problem.

    :param x: the flat numpy array representing the bitstring
    :return: the LABS objective

    # N = 3, E = 1, FN = 4.50000
    >>> labs(np.array([0, 0, 1]))
    1

    # N = 3, E = 1, FN = 4.50000
    >>> labs(np.array([1, 1, 0]))
    1

    # N = 4, E = 2, FN = 4.00000
    >>> labs(np.array([0, 1, 0, 0]))
    2

    # N = 4, E = 2, FN = 4.00000
    >>> labs(np.array([1, 0, 1, 1]))
    2

    # N = 5, E = 2, FN = 6.25000
    >>> labs(np.array([0, 0, 0, 1, 0]))
    2

    # N = 5, E = 2, FN = 6.25000
    >>> labs(np.array([1, 1, 1, 0, 1]))
    2

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([0, 1, 1, 1, 1, 0]))
    7

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([1, 0, 0, 0, 0, 1]))
    7

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([0, 1, 1, 0, 0, 0]))
    7

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([1, 0, 0, 1, 1, 1]))
    7

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([0, 0, 0, 1, 0, 0]))
    7

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([1, 1, 1, 0, 1, 1]))
    7

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([0, 1, 0, 1, 1, 1]))
    7

    # N = 6, E = 7, FN = 2.57143
    >>> labs(np.array([1, 0, 1, 0, 0, 0]))
    7

    # N = 7, E = 3, FN = 8.16667
    >>> labs(np.array([0, 1, 0, 0, 1, 1, 1]))
    3

    # N = 7, E = 3, FN = 8.16667
    >>> labs(np.array([1, 0, 1, 1, 0, 0, 0]))
    3

    # N = 8, E = 8, FN = 4.00000
    >>> labs(np.array([0, 0, 0, 1, 1, 0, 1, 0]))
    8

    # N = 8, E = 8, FN = 4.00000
    >>> labs(np.array([1, 1, 1, 0, 0, 1, 0, 1]))
    8

    # N = 8, E = 8, FN = 4.00000
    >>> labs(np.array([0, 0, 0, 1, 0, 1, 1, 0]))
    8

    # N = 8, E = 8, FN = 4.00000
    >>> labs(np.array([1, 1, 1, 0, 1, 0, 0, 1]))
    8

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([0, 0, 0, 1, 0, 1, 0, 0, 1]))
    12

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([1, 1, 1, 0, 1, 0, 1, 1, 0]))
    12

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 0, 1, 0]))
    12

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 1, 0, 1]))
    12

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([0, 0, 0, 1, 1, 0, 0, 1, 0]))
    12

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([1, 1, 1, 0, 0, 1, 1, 0, 1]))
    12

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([0, 0, 0, 1, 0, 1, 1, 0, 0]))
    12

    # N = 9, E = 12, FN = 3.37500
    >>> labs(np.array([1, 1, 1, 0, 1, 0, 0, 1, 1]))
    12

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 0, 0, 1, 0]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 1, 1, 0, 1]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 0, 1, 0]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 1, 0, 1]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([0, 0, 0, 1, 0, 1, 0, 0, 1, 1]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([1, 1, 1, 0, 1, 0, 1, 1, 0, 0]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([0, 0, 0, 0, 1, 0, 1, 1, 0, 0]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([1, 1, 1, 1, 0, 1, 0, 0, 1, 1]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 0, 1, 1, 0]))
    13

    # N = 10, E = 13, FN = 3.84615
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 1, 0, 0, 1]))
    13

    # N = 11, E = 5, FN = 12.10000
    >>> labs(np.array([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1]))
    5

    # N = 11, E = 5, FN = 12.10000
    >>> labs(np.array([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0]))
    5

    # N = 12, E = 10, FN = 7.20000
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]))
    10

    # N = 12, E = 10, FN = 7.20000
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]))
    10

    # N = 12, E = 10, FN = 7.20000
    >>> labs(np.array([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]))
    10

    # N = 12, E = 10, FN = 7.20000
    >>> labs(np.array([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1]))
    10

    # N = 13, E = 6, FN = 14.08333
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]))
    6

    # N = 13, E = 6, FN = 14.08333
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]))
    6

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0]))
    19

    # N = 14, E = 19, FN = 5.15789
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1]))
    19

    # N = 15, E = 15, FN = 7.50000
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]))
    15

    # N = 15, E = 15, FN = 7.50000
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]))
    15

    # N = 15, E = 15, FN = 7.50000
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1]))
    15

    # N = 15, E = 15, FN = 7.50000
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0]))
    15

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0]))
    24

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1]))
    24

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0]))
    24

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1]))
    24

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0]))
    24

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1]))
    24

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0]))
    24

    # N = 16, E = 24, FN = 5.33333
    >>> labs(np.array([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1]))
    24

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1]))
    32

    # N = 17, E = 32, FN = 4.51562
    >>> labs(np.array([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0]))
    32

    # N = 18, E = 25, FN = 6.48000
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]))
    25

    # N = 18, E = 25, FN = 6.48000
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1]))
    25

    # N = 18, E = 25, FN = 6.48000
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0]))
    25

    # N = 18, E = 25, FN = 6.48000
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1]))
    25

    # N = 19, E = 29, FN = 6.22414
    >>> labs(np.array([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1,
    ...     1]))
    29

    # N = 19, E = 29, FN = 6.22414
    >>> labs(np.array([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0,
    ...     0]))
    29

    # N = 20, E = 26, FN = 7.69231
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0,
    ...     0, 1]))
    26

    # N = 20, E = 26, FN = 7.69231
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,
    ...     1, 0]))
    26

    # N = 21, E = 26, FN = 8.48077
    >>> labs(np.array([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0,
    ...     1, 1, 0]))
    26

    # N = 21, E = 26, FN = 8.48077
    >>> labs(np.array([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,
    ...     0, 0, 1]))
    26

    # N = 22, E = 39, FN = 6.20513
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1,
    ...     1, 0, 0, 0]))
    39

    # N = 22, E = 39, FN = 6.20513
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,
    ...     0, 1, 1, 1]))
    39

    # N = 22, E = 39, FN = 6.20513
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0,
    ...     1, 1, 0, 1]))
    39

    # N = 22, E = 39, FN = 6.20513
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1,
    ...     0, 0, 1, 0]))
    39

    # N = 22, E = 39, FN = 6.20513
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0,
    ...     0, 0, 1, 1]))
    39

    # N = 22, E = 39, FN = 6.20513
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,
    ...     1, 1, 0, 0]))
    39

    # N = 23, E = 47, FN = 5.62766
    >>> labs(np.array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,
    ...     0, 0, 0, 1, 1]))
    47

    # N = 23, E = 47, FN = 5.62766
    >>> labs(np.array([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
    ...     1, 1, 1, 0, 0]))
    47

    # N = 23, E = 47, FN = 5.62766
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1,
    ...     1, 0, 0, 1, 0]))
    47

    # N = 23, E = 47, FN = 5.62766
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,
    ...     0, 1, 1, 0, 1]))
    47

    # N = 23, E = 47, FN = 5.62766
    >>> labs(np.array([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1,
    ...     0, 0, 0, 1, 1]))
    47

    # N = 23, E = 47, FN = 5.62766
    >>> labs(np.array([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,
    ...     1, 1, 1, 0, 0]))
    47

    # N = 24, E = 36, FN = 8.00000
    >>> labs(np.array([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0,
    ...     1, 1, 0, 1, 1, 0]))
    36

    # N = 24, E = 36, FN = 8.00000
    >>> labs(np.array([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
    ...     0, 0, 1, 0, 0, 1]))
    36

    # N = 25, E = 36, FN = 8.68056
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
    ...     1, 0, 1, 1, 0, 0, 1]))
    36

    # N = 25, E = 36, FN = 8.68056
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0,
    ...     0, 1, 0, 0, 1, 1, 0]))
    36

    # N = 26, E = 45, FN = 7.51111
    >>> labs(np.array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,
    ...     0, 1, 1, 1, 0, 0, 1, 1]))
    45

    # N = 26, E = 45, FN = 7.51111
    >>> labs(np.array([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,
    ...     1, 0, 0, 0, 1, 1, 0, 0]))
    45

    # N = 26, E = 45, FN = 7.51111
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1,
    ...     0, 1, 1, 0, 1, 1, 0, 1]))
    45

    # N = 26, E = 45, FN = 7.51111
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0,
    ...     1, 0, 0, 1, 0, 0, 1, 0]))
    45

    # N = 26, E = 45, FN = 7.51111
    >>> labs(np.array([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
    ...     0, 1, 1, 0, 1, 1, 0, 1]))
    45

    # N = 26, E = 45, FN = 7.51111
    >>> labs(np.array([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
    ...     1, 0, 0, 1, 0, 0, 1, 0]))
    45

    # N = 27, E = 37, FN = 9.85135
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
    ...     1, 0, 0, 1, 0, 1, 1, 0, 1]))
    37

    # N = 27, E = 37, FN = 9.85135
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,
    ...     0, 1, 1, 0, 1, 0, 0, 1, 0]))
    37

    # N = 28, E = 50, FN = 7.84000
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
    ...     1, 0, 0, 1, 0, 1, 1, 0, 1, 1]))
    50

    # N = 28, E = 50, FN = 7.84000
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,
    ...     0, 1, 1, 0, 1, 0, 0, 1, 0, 0]))
    50

    # N = 29, E = 62, FN = 6.78226
    >>> labs(np.array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0,
    ...     1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0]))
    62

    # N = 29, E = 62, FN = 6.78226
    >>> labs(np.array([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1,
    ...     0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1]))
    62

    # N = 29, E = 62, FN = 6.78226
    >>> labs(np.array([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
    ...     1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0]))
    62

    # N = 29, E = 62, FN = 6.78226
    >>> labs(np.array([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
    ...     0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1]))
    62

    # N = 30, E = 59, FN = 7.62712
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,
    ...     0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0]))
    59

    # N = 30, E = 59, FN = 7.62712
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    ...     1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1]))
    59

    # N = 30, E = 59, FN = 7.62712
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,
    ...     0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0]))
    59

    # N = 30, E = 59, FN = 7.62712
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    ...     1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1]))
    59

    # N = 31, E = 67, FN = 7.17164
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1,
    ...     0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1]))
    67

    # N = 31, E = 67, FN = 7.17164
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,
    ...     1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0]))
    67

    # N = 32, E = 64, FN = 8.00000
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1,
    ...     1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0]))
    64

    # N = 32, E = 64, FN = 8.00000
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0,
    ...     0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1]))
    64

    # N = 33, E = 64, FN = 8.50781
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0,
    ...     1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]))
    64

    # N = 33, E = 64, FN = 8.50781
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1,
    ...     0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]))
    64

    # N = 34, E = 65, FN = 8.89231
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,
    ...     0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]))
    65

    # N = 34, E = 65, FN = 8.89231
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0,
    ...     1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]))
    65

    # N = 35, E = 73, FN = 8.39041
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1,
    ...     0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0]))
    73

    # N = 35, E = 73, FN = 8.39041
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0,
    ...     1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1]))
    73

    # N = 36, E = 82, FN = 7.90244
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1,
    ...     0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0]))
    82

    # N = 36, E = 82, FN = 7.90244
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,
    ...     1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1]))
    82

    # N = 37, E = 86, FN = 7.95930
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,
    ...     0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]))
    86

    # N = 37, E = 86, FN = 7.95930
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,
    ...     1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]))
    86

    # N = 38, E = 87, FN = 8.29885
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,
    ...     0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]))
    87

    # N = 38, E = 87, FN = 8.29885
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,
    ...     1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]))
    87

    # N = 39, E = 99, FN = 7.68182
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,
    ...     0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1]))
    99

    # N = 39, E = 99, FN = 7.68182
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0,
    ...     1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]))
    99

    # N = 39, E = 99, FN = 7.68182
    >>> labs(np.array([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,
    ...     0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1]))
    99

    # N = 39, E = 99, FN = 7.68182
    >>> labs(np.array([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1,
    ...     1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0]))
    99

    # N = 40, E = 108, FN = 7.40741
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,
    ...     1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
    ...     1]))
    108

    # N = 40, E = 108, FN = 7.40741
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,
    ...     0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,
    ...     0]))
    108

    # N = 41, E = 108, FN = 7.78241
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1,
    ...     0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0,
    ...     1, 0]))
    108

    # N = 41, E = 108, FN = 7.78241
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0,
    ...     1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1,
    ...     0, 1]))
    108

    # N = 42, E = 101, FN = 8.73267
    >>> labs(np.array([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,
    ...     1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0,
    ...     1, 0, 0]))
    101

    # N = 42, E = 101, FN = 8.73267
    >>> labs(np.array([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0,
    ...     0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,
    ...     0, 1, 1]))
    101

    # N = 43, E = 109, FN = 8.48165
    >>> labs(np.array([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,
    ...     1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,
    ...     0, 1, 1, 1]))
    109

    # N = 43, E = 109, FN = 8.48165
    >>> labs(np.array([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,
    ...     0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0,
    ...     1, 0, 0, 0]))
    109

    # N = 44, E = 122, FN = 7.93443
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,
    ...     1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,
    ...     0, 1, 0, 0, 1]))
    122

    # N = 44, E = 122, FN = 7.93443
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0,
    ...     0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0,
    ...     1, 0, 1, 1, 0]))
    122

    # N = 45, E = 118, FN = 8.58051
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,
    ...     0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0,
    ...     1, 0, 1, 0, 1, 0]))
    118

    # N = 45, E = 118, FN = 8.58051
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0,
    ...     1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,
    ...     0, 1, 0, 1, 0, 1]))
    118

    # N = 46, E = 131, FN = 8.07634
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0,
    ...     0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0,
    ...     1, 0, 1, 0, 1, 0, 1]))
    131

    # N = 46, E = 131, FN = 8.07634
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1,
    ...     1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,
    ...     0, 1, 0, 1, 0, 1, 0]))
    131

    # N = 46, E = 131, FN = 8.07634
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,
    ...     0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0,
    ...     1, 0, 1, 0, 1, 0, 1]))
    131

    # N = 46, E = 131, FN = 8.07634
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0,
    ...     1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,
    ...     0, 1, 0, 1, 0, 1, 0]))
    131

    # N = 46, E = 131, FN = 8.07634
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0,
    ...     0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1,
    ...     0, 1, 1, 0, 1, 1, 0]))
    131

    # N = 46, E = 131, FN = 8.07634
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,
    ...     1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0,
    ...     1, 0, 0, 1, 0, 0, 1]))
    131

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,
    ...     0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1,
    ...     0, 1, 0, 1, 0, 1, 0, 1]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0,
    ...     1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,
    ...     1, 0, 1, 0, 1, 0, 1, 0]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    ...     1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,
    ...     0, 1, 1, 0, 0, 1, 0, 1]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
    ...     0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0,
    ...     1, 0, 0, 1, 1, 0, 1, 0]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0,
    ...     0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,
    ...     1, 1, 0, 0, 0, 0, 1, 1]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1,
    ...     1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1,
    ...     0, 0, 1, 1, 1, 1, 0, 0]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,
    ...     0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    ...     1, 0, 1, 0, 1, 1, 0, 1]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
    ...     1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
    ...     0, 1, 0, 1, 0, 0, 1, 0]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,
    ...     0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,
    ...     0, 1, 0, 0, 1, 0, 0, 1]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,
    ...     1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
    ...     1, 0, 1, 1, 0, 1, 1, 0]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
    ...     0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0,
    ...     1, 0, 1, 1, 0, 0, 0, 1]))
    135

    # N = 47, E = 135, FN = 8.18148
    >>> labs(np.array([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
    ...     1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1,
    ...     0, 1, 0, 0, 1, 1, 1, 0]))
    135

    # N = 48, E = 140, FN = 8.22857
    >>> labs(np.array([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,
    ...     0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1,
    ...     0, 1, 0, 0, 1, 0, 1, 1, 0]))
    140

    # N = 48, E = 140, FN = 8.22857
    >>> labs(np.array([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    ...     1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0,
    ...     1, 0, 1, 1, 0, 1, 0, 0, 1]))
    140

    # N = 49, E = 136, FN = 8.82721
    >>> labs(np.array([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
    ...     1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,
    ...     1, 1, 1, 0, 1, 0, 0, 0, 0, 1]))
    136

    # N = 49, E = 136, FN = 8.82721
    >>> labs(np.array([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,
    ...     0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0,
    ...     0, 0, 0, 1, 0, 1, 1, 1, 1, 0]))
    136

    # N = 49, E = 136, FN = 8.82721
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0,
    ...     0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,
    ...     0, 0, 1, 0, 0, 1, 0, 0, 1, 0]))
    136

    # N = 49, E = 136, FN = 8.82721
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
    ...     1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0,
    ...     1, 1, 0, 1, 1, 0, 1, 1, 0, 1]))
    136

    # N = 50, E = 153, FN = 8.16993
    >>> labs(np.array([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
    ...     1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,
    ...     1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1]))
    153

    # N = 50, E = 153, FN = 8.16993
    >>> labs(np.array([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,
    ...     0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0,
    ...     0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0]))
    153

    # N = 50, E = 153, FN = 8.16993
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,
    ...     0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0,
    ...     1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1]))
    153

    # N = 50, E = 153, FN = 8.16993
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,
    ...     1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1,
    ...     0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0]))
    153

    # N = 50, E = 153, FN = 8.16993
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,
    ...     0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,
    ...     1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0]))
    153

    # N = 50, E = 153, FN = 8.16993
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,
    ...     1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,
    ...     0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1]))
    153

    # N = 51, E = 153, FN = 8.50000
    >>> labs(np.array([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,
    ...     1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,
    ...     1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1]))
    153

    # N = 51, E = 153, FN = 8.50000
    >>> labs(np.array([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1,
    ...     0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,
    ...     0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0]))
    153

    # N = 52, E = 166, FN = 8.14458
    >>> labs(np.array([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
    ...     1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0,
    ...     1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1]))
    166

    # N = 52, E = 166, FN = 8.14458
    >>> labs(np.array([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,
    ...     0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1,
    ...     0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]))
    166

    # N = 53, E = 170, FN = 8.26176
    >>> labs(np.array([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0,
    ...     0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,
    ...     1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1]))
    170

    # N = 53, E = 170, FN = 8.26176
    >>> labs(np.array([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
    ...     1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1,
    ...     0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0]))
    170

    # N = 53, E = 170, FN = 8.26176
    >>> labs(np.array([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    ...     1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0,
    ...     1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0]))
    170

    # N = 53, E = 170, FN = 8.26176
    >>> labs(np.array([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
    ...     0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1,
    ...     0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1]))
    170

    # N = 54, E = 175, FN = 8.33143
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
    ...     1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,
    ...     1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0]))
    175

    # N = 54, E = 175, FN = 8.33143
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
    ...     0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0,
    ...     0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1]))
    175

    # N = 55, E = 171, FN = 8.84503
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,
    ...     0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0,
    ...     1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1]))
    171

    # N = 55, E = 171, FN = 8.84503
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
    ...     1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1,
    ...     0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0]))
    171

    # N = 55, E = 171, FN = 8.84503
    >>> labs(np.array([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1,
    ...     0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1]))
    171

    # N = 55, E = 171, FN = 8.84503
    >>> labs(np.array([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0,
    ...     1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0]))
    171

    # N = 56, E = 192, FN = 8.16667
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,
    ...     1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,
    ...     1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1]))
    192

    # N = 56, E = 192, FN = 8.16667
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,
    ...     0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1,
    ...     0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0]))
    192

    # N = 57, E = 188, FN = 8.64096
    >>> labs(np.array([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,
    ...     1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
    ...     0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0]))
    188

    # N = 57, E = 188, FN = 8.64096
    >>> labs(np.array([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
    ...     0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
    ...     1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1]))
    188

    # N = 58, E = 197, FN = 8.53807
    >>> labs(np.array([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1,
    ...     1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,
    ...     1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]))
    197

    # N = 58, E = 197, FN = 8.53807
    >>> labs(np.array([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0,
    ...     0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1,
    ...     0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0]))
    197

    # N = 59, E = 205, FN = 8.49024
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
    ...     1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1,
    ...     1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]))
    205

    # N = 59, E = 205, FN = 8.49024
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
    ...     0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0,
    ...     0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0]))
    205

    # N = 59, E = 205, FN = 8.49024
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0,
    ...     1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0,
    ...     0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0]))
    205

    # N = 59, E = 205, FN = 8.49024
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1,
    ...     0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,
    ...     1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1]))
    205

    # N = 60, E = 218, FN = 8.25688
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
    ...     0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1,
    ...     0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1]))
    218

    # N = 60, E = 218, FN = 8.25688
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,
    ...     1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0,
    ...     1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0]))
    218

    # N = 60, E = 218, FN = 8.25688
    >>> labs(np.array([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,
    ...     0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1,
    ...     1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1]))
    218

    # N = 60, E = 218, FN = 8.25688
    >>> labs(np.array([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0,
    ...     1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0,
    ...     0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0]))
    218

    # N = 61, E = 226, FN = 8.23230
    >>> labs(np.array([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
    ...     0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0,
    ...     0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,
    ...     1]))
    226

    # N = 61, E = 226, FN = 8.23230
    >>> labs(np.array([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,
    ...     1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
    ...     1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1,
    ...     0]))
    226

    # N = 62, E = 235, FN = 8.17872
    >>> labs(np.array([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,
    ...     1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,
    ...     1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0,
    ...     1, 1]))
    235

    # N = 62, E = 235, FN = 8.17872
    >>> labs(np.array([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1,
    ...     0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,
    ...     0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,
    ...     0, 0]))
    235

    # N = 62, E = 235, FN = 8.17872
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0,
    ...     0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
    ...     1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,
    ...     1, 1]))
    235

    # N = 62, E = 235, FN = 8.17872
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1,
    ...     1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1,
    ...     0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1,
    ...     0, 0]))
    235

    # N = 63, E = 207, FN = 9.58696
    >>> labs(np.array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1,
    ...     1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,
    ...     0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0,
    ...     1, 1, 0]))
    207

    # N = 63, E = 207, FN = 9.58696
    >>> labs(np.array([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0,
    ...     0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0,
    ...     1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1,
    ...     0, 0, 1]))
    207

    # N = 64, E = 208, FN = 9.84615
    >>> labs(np.array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1,
    ...     1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,
    ...     0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0,
    ...     1, 1, 0, 0]))
    208

    # N = 64, E = 208, FN = 9.84615
    >>> labs(np.array([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0,
    ...     0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0,
    ...     1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1,
    ...     0, 0, 1, 1]))
    208

    # N = 65, E = 240, FN = 8.80208
    >>> labs(np.array([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,
    ...     0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,
    ...     1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1,
    ...     0, 0, 1, 0, 0]))
    240

    # N = 65, E = 240, FN = 8.80208
    >>> labs(np.array([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0,
    ...     1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1,
    ...     0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,
    ...     1, 1, 0, 1, 1]))
    240

    # N = 66, E = 257, FN = 8.47471
    >>> labs(np.array([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0,
    ...     0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1,
    ...     0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0,
    ...     1, 1, 1, 1, 0, 0]))
    257

    # N = 66, E = 257, FN = 8.47471
    >>> labs(np.array([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1,
    ...     1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0,
    ...     1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,
    ...     0, 0, 0, 0, 1, 1]))
    257

    # N = 3, all bits are True
    >>> labs(np.array([1, 1, 1]))
    5

    # N = 4, all bits are True
    >>> labs(np.array([1, 1, 1, 1]))
    14

    # N = 5, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1]))
    30

    # N = 6, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1]))
    55

    # N = 7, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1]))
    91

    # N = 8, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0]))
    140

    # N = 9, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]))
    204

    # N = 10, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    285

    # N = 11, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    385

    # N = 12, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    506

    # N = 13, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    650

    # N = 14, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    819

    # N = 15, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    1015

    # N = 16, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    1240

    # N = 17, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    1496

    # N = 18, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    1785

    # N = 19, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0]))
    2109

    # N = 20, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0]))
    2470

    # N = 21, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1]))
    2870

    # N = 22, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1]))
    3311

    # N = 23, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1]))
    3795

    # N = 24, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0]))
    4324

    # N = 25, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1]))
    4900

    # N = 26, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1]))
    5525

    # N = 27, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1]))
    6201

    # N = 28, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    6930

    # N = 29, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    7714

    # N = 30, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    8555

    # N = 31, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    9455

    # N = 32, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    10416

    # N = 33, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    11440

    # N = 34, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    12529

    # N = 35, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    13685

    # N = 36, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    14910

    # N = 37, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    16206

    # N = 38, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    17575

    # N = 39, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    19019

    # N = 40, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0]))
    20540

    # N = 41, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0]))
    22140

    # N = 42, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1]))
    23821

    # N = 43, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1]))
    25585

    # N = 44, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0]))
    27434

    # N = 45, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0]))
    29370

    # N = 46, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1]))
    31395

    # N = 47, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1]))
    33511

    # N = 48, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1]))
    35720

    # N = 49, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    38024

    # N = 50, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    40425

    # N = 51, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    42925

    # N = 52, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    45526

    # N = 53, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    48230

    # N = 54, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    51039

    # N = 55, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    53955

    # N = 56, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    56980

    # N = 57, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    60116

    # N = 58, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    63365

    # N = 59, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    66729

    # N = 60, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    70210

    # N = 61, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0]))
    73810

    # N = 62, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1]))
    77531

    # N = 63, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1]))
    81375

    # N = 64, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1]))
    85344

    # N = 65, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1]))
    89440

    # N = 66, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1]))
    93665

    # N = 67, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0]))
    98021

    # N = 68, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0]))
    102510

    # N = 69, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0]))
    107134

    # N = 70, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    111895

    # N = 71, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    116795

    # N = 72, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    121836

    # N = 73, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    127020

    # N = 74, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    132349

    # N = 75, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    137825

    # N = 76, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    143450

    # N = 77, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    149226

    # N = 78, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    155155

    # N = 79, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    161239

    # N = 80, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    167480

    # N = 81, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    173880

    # N = 82, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0]))
    180441

    # N = 83, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0]))
    187165

    # N = 84, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0]))
    194054

    # N = 85, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0]))
    201110

    # N = 86, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1]))
    208335

    # N = 87, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0]))
    215731

    # N = 88, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1]))
    223300

    # N = 89, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0]))
    231044

    # N = 90, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0]))
    238965

    # N = 91, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    247065

    # N = 92, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    255346

    # N = 93, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    263810

    # N = 94, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    272459

    # N = 95, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    281295

    # N = 96, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    290320

    # N = 97, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    299536

    # N = 98, all bits are False
    >>> labs(np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ...     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
    308945

    # N = 99, all bits are True
    >>> labs(np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ...     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))
    318549
    """
    n: Final[int] = len(x)  # Get the length of the bit string.
    result: int = 0
    for k in range(1, n):
        sqr: int = 0
        for i in range(n - k):
            sqr += 1 if x[i] == x[i + k] else -1
        result += sqr * sqr
    return result


#: The lower bounds of the LABS problem, i.e., the objective values of the
#: known global optima also used in the unit tests of the :func:`labs`
#: function. We use the data from
#:
#: Tom Packebusch and Stephan Mertens. Low Autocorrelation Binary Sequences.
#: arXiv:1512.02475v2 [cond-mat.stat-mech] 24 Mar 2016
#: https://arxiv.org/pdf/1512.02475
_LBS: Final[dict[int, int]] = {
    3: 1, 4: 2, 5: 2, 6: 7, 7: 3, 8: 8, 9: 12, 10: 13, 11: 5, 12: 10, 13: 6,
    14: 19, 15: 15, 16: 24, 17: 32, 18: 25, 19: 29, 20: 26, 21: 26, 22: 39,
    23: 47, 24: 36, 25: 36, 26: 45, 27: 37, 28: 50, 29: 62, 30: 59, 31: 67,
    32: 64, 33: 64, 34: 65, 35: 73, 36: 82, 37: 86, 38: 87, 39: 99, 40: 108,
    41: 108, 42: 101, 43: 109, 44: 122, 45: 118, 46: 131, 47: 135, 48: 140,
    49: 136, 50: 153, 51: 153, 52: 166, 53: 170, 54: 175, 55: 171, 56: 192,
    57: 188, 58: 197, 59: 205, 60: 218, 61: 226, 62: 235, 63: 207, 64: 208,
    65: 240, 66: 257}


def is_labs_objective_value_optimal(n: int, f: int) -> bool | None:
    """
    Check whether a given objective value is optimal on the LABS problem.

    We use the lower and upper bound of the LABS problem to check whether a
    given objective value can be optimal. We also use the objective values of
    the known global optima from

    Tom Packebusch and Stephan Mertens. Low Autocorrelation Binary Sequences.
    arXiv:1512.02475v2 [cond-mat.stat-mech] 24 Mar 2016
    https://arxiv.org/pdf/1512.02475

    :param n: the scale of the problem
    :param f: the objective value
    :returns: `True` if the objective value `f` is optimal, `False` if it
        cannot be optimal, and `None` if the situation is unclear
    :raises TypeError: if `n` or `f` are not integers
    :raises ValueError: if `n` or `f` are invalid integer values

    >>> print(is_labs_objective_value_optimal(49, 136))
    True

    >>> print(is_labs_objective_value_optimal(49, 137))
    False

    >>> print(is_labs_objective_value_optimal(100, 50))
    True

    >>> print(is_labs_objective_value_optimal(100, 51))
    None

    >>> try:
    ...     is_labs_objective_value_optimal("x", 3)
    ... except TypeError as te:
    ...     print(te)
    n should be an instance of int but is str, namely 'x'.

    >>> try:
    ...     is_labs_objective_value_optimal(7, "3")
    ... except TypeError as te:
    ...     print(te)
    f should be an instance of int but is str, namely '3'.

    >>> try:
    ...     is_labs_objective_value_optimal(0, 0)
    ... except ValueError as ve:
    ...     print(ve)
    n=0 is invalid, must be in 3..1000000000.

    >>> try:
    ...     is_labs_objective_value_optimal(3, 0)
    ... except ValueError as ve:
    ...     print(ve)
    f=0 is invalid, must be in 1..5.

    >>> try:
    ...     is_labs_objective_value_optimal(3, 234240)
    ... except ValueError as ve:
    ...     print(ve)
    f=234240 is invalid, must be in 1..5.
    """
    check_int_range(n, "n", 3)
    lb: int = n // 2
    ub: int = ((n - 1) * n * (2 * n - 1)) // 6
    if check_int_range(f, "f", lb, ub) <= lb:
        return True
    if n in _LBS:  # We know the optimum, so if it is not it, we can stop.
        lb = _LBS[n]
        return check_int_range(f, "f", lb) <= lb
    if f >= ub:
        return False
    return None


class LABS(BitStringProblem):
    """The Low-Autocorrelation Sequence Problem."""

    def __init__(self, n: int) -> None:
        """
        Initialize the LABS objective function.

        :param n: the dimension of the problem
        """
        super().__init__(check_int_range(n, "n", 3))
        self.evaluate = labs  # type: ignore

    def lower_bound(self) -> int:
        """
        Get the lower bound of the LABS problem.

        The minimum amount of energy that a sequence could possibly have.
        For each correlation length `k`, this is `(n - k) % 2`.
        In total, this is just equivalent to `n // 2`.

        For some instances of :class:`LABS`, the global optima are known.
        For these instances, we return the objective values of these optima,
        which obviously are `>= n // 2`.

        :return: the lower bound of the :class:`LABS` problem

        >>> LABS(16).lower_bound()
        24

        >>> LABS(61).lower_bound()
        226

        >>> LABS(200).lower_bound()
        100

        >>> LABS(124200).lower_bound()
        62100
        """
        n: Final[int] = self.n
        if n in _LBS:
            return _LBS[n]
        return n // 2

    def upper_bound(self) -> int:
        """
        Get the upper bound of the :class:`LABS` problem.

        The energy of a sequence where all bits are the same is the highest.
        This means that each correlation basically produces its length to the
        square as contribution to the result. The upper bound then is the sum
        of all of these squares from `1..(n-1)`.

        :return: the upper bound of LABS

        >>> LABS(16).upper_bound()
        1240

        >>> LABS(63).upper_bound()
        81375

        >>> LABS(200).upper_bound()
        2646700

        >>> LABS(12316).upper_bound()
        622636950290
        """
        return ((self.n - 1) * self.n * (2 * self.n - 1)) // 6

    def __str__(self) -> str:
        """
        Get the name of the LABS objective function.

        :return: labs_ + length of string

        >>> LABS(16)
        labs_16
        """
        return f"labs_{self.n}"

    @classmethod
    def default_instances(
            cls: type, scale_min: int = 3, scale_max: int = 625) \
            -> Iterator[Callable[[], "LABS"]]:
        """
        Get the default instances of the :class:`LABS` problem.

        :param scale_min: the minimum permitted scale, by default `3`
        :param scale_max: the maximum permitted scale, by default `625`
        :returns: a sequence of default :class:`LABS` instances

        >>> len(list(LABS.default_instances()))
        46

        >>> [x() for x in LABS.default_instances()]
        [labs_3, labs_4, labs_5, labs_6, labs_7, labs_8, labs_9, labs_10, \
labs_11, labs_12, labs_13, labs_14, labs_15, labs_16, labs_17, labs_18, \
labs_19, labs_20, labs_21, labs_22, labs_23, labs_24, labs_25, labs_26, \
labs_27, labs_28, labs_29, labs_30, labs_31, labs_32, labs_33, labs_36, \
labs_40, labs_41, labs_42, labs_44, labs_48, labs_49, labs_50, labs_55, \
labs_59, labs_60, labs_64, labs_66, labs_100, labs_625]
        """
        check_int_range(scale_max, "scale_max", check_int_range(
            scale_min, "scale_min", 1, 1_000_000_000) + 1, 1_000_000_000)
        return (cast(Callable[[], "LABS"], lambda __i=i: cls(__i))
                for i in merge_sorted_and_return_unique((
                    16, 64, 100, 625), (j for j in default_scale_sequence(
                        scale_min, scale_max) if j in _LBS))
                if scale_min <= i <= scale_max)
